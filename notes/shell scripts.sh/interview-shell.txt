factorial number

#!/bin/bash
sum=1
for((i=1;i<=$1;i++))
do
   sum=$(($sum*$i))
done
echo "$sum"

---------------------------------------------------------------------------
reverse a string 

echo "enter the string"
read string
n=`echo $string | wc -c`
 
while [ $n -gt 0 ]
do
   echo $string | cut -c$n >> temp
   n=$(($n-1))
done
cat temp | tr -d '\n'
rm temp

-----------------------------------------------------------------------------
Fibonacci:

#!/bin/bash
a=0
b=1
N=$1
while [ $N -ge 0 ]
do
    echo "$a"
    f=$((a+b))
    a=$b
    b=$f
    N=$(($N-1))
done
-------------------------------------------------------------------------------
palindrome:

#!/bin/bash
echo "enter number or string"
read a

n=`echo $a | wc -c`
while [ $n -gt 0 ]
do
    n=$(($n-1))
    echo "$a" | cut -c$n >> temp
done
b=`cat temp | tr -d "\n"`

if [ $a -eq $b ]
then
   echo "number is palindrome"
else
   echo "number is not palindrome"
fi

rm temp
-------------------------------------------------------------------------------
Example: Script to change the file extensions

t1.txt t2.txt t3.txt
t1.sh t2.sh t3.sh

#!/bin/bash

find -type f -name "*.txt" > temp
while read line
do
	name=`echo $line | sed s/.txt/.sh/g`
	mv $line $name
done < temp
rm temp
--------------------------------------------------------------------------------
let say i have a application log file, need to identify from which ip's my application 
has been accessesd and how many times 

grep -E -o "([0-9]{1,3}[\.]){3}[0-9]{1,3}" logfile | sort | uniq -c | sort â€“nr       

    ***(no space remember in special character)
    -o => if you don't use it shows enter line
	-c how many times occarance are there
	-n sort based on number
	-E in basic regular expression the meta character '$' '+' '(' '{'
	   lose there special meaning; instead use the backslashed version '\$' '\+' '\(' '\{' .
	   
	() -> like for loop
	{3} -> this perticular pattern search for 3 times 
	
--------------------------------------------------------------------------------
interview) A script to check if the services are down
#!/bin/bash

for a in $*
do
     systemctl status $a > /dev/null
     n=`echo $?`
     if [ $n -eq 0 ]
     then
        echo "service is running"
     else
        systemctl start $a
		echo $a >> started_service
     fi
done
mail -s "subject" pavan@gmail.com < started_service

-----------------------------------------------------------------------------------
Script to display a last letter of each row in a file

#!/bin/bash

while read line
do
   n=`$line | wc -c`
   echo $line | cut -c$n >>  temp           ((echo pavan | cut -c3-5))
done < $1

cat temp
rm temp 
----------------------------------------------------------------------------------

