K8S:

apiVersion: v1   
kind: Pod        
metadata:
  name: nginx-pod
  labels:                            
    app: nginx
spec:
  containers:
  - name: webserver
    image: nginx
    ports:
	- containerPort: 80
-------------------------
    resources:                                      
	  requests:
	    cpu: 0.25
		memory: 128Mi
	  limits:
	    cpu: 0.5
		memory: 256Mi
------------------------
    volumeMounts:                         
    - mountPath: /var/lib/grafana
      name: grafana-storage
	  
  volumes:                                 
  - name: grafana-storage 
    configMap:
      name: grafana-datasources
-----------------------------------------------------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deploy
  labels:
    app: java
spec:
  replicas: 4
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      name: nginx
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.20
        ports:
        - containerPort: 80
------------------------------------------------------------------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: nginx-nodeport
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
  - targetPort: 80
    port: 90
	nodePort: 30500
----------------------------------------------------------------------------------------------------
s3-bucket connection 
---------------------------------------------------------------------------------------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: aws-config
data:
  config: |
    [default]
    region = us-east-1
  syncs3.sh: |
    export AWS_CONFIG_FILE="/root/.aws/config" #change it as per user
    export AWS_ACCESS_KEY_ID=***** #please provide access id 
    export AWS_SECRET_ACCESS_KEY=***** #please provide secret key
    aws s3 sync /var/log/nginx s3://your_bucket_name
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
spec:
  selector:
    matchLabels:
      app: myapp-dep
  template:
    metadata:
      labels:
        app: myapp-dep
    spec:
	  containers:
      - name: sidecar-logs
        image: xueshanf/awscli
        command: ["/bin/sh"]
        args: ["-c","cp /root/scripts/syncs3.sh /root/syncs3.sh;chmod 777 /root/syncs3.sh;while true; do sh /root/syncs3.sh; sleep 10;done"]
        volumeMounts:
          - name: aws-credentials
            mountPath: /root/.aws/config
            subPath: config
          - name: aws-credentials
            mountPath: /root/scripts/syncs3.sh
            subPath: syncs3.sh
      volumes:
      - name: aws-credentials
        configMap:
          name: "aws-config"
----------------------------------------------------------------------------------------------------------
Head less service
----------------------------------------------------------------------------------------------------------

apiVersion: apps/v1
kind: Deployment 
metadata: 
  name: mysql-deployment
  labels:
    app: mysql
spec:
  serviceName: mysql-h
  replicas: 3 
  template: 
    metadata:
      name: myapp-pod
	  labels:
	    app: mysql
    spec:
      containers:
	  - name: mysql
	    image: mysql 
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^	  
apiVersion: v1
kind: Service
metadata:
  name: mysql-h
spec:
  ports:
  - port:3306
  selector:
    app: mysql
  clusterIP: none
-----------------------------------------------------------------------------------------------------
       